/*
* Copyright (c) 2002 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource file for midp lcdui
*
*/


#include <data_caging_paths_strings.hrh>

//  RESOURCE IDENTIFIER
NAME UI

//  INCLUDES
#include <uikon.rh>
#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.loc>
#include <avkonsct.loc>
#include <lcdui.loc>

#include <appinfo.rh>
#include "AvkonIcons.hrh"
#include "lcdui.hrh"
#include "lcdui.rh"

#include <uikon.hrh>
#include <eikon.rh>
#include <eikon.rsg>
#include <avkon.mbg>
#include <lcdui.mbg>

#include <aknsconstants.hrh>

#include <AiwCommon.rh>
#include <AiwGenericParam.hrh>




RESOURCE RSS_SIGNATURE { }

RESOURCE TBUF16 { buf=""; }

RESOURCE EIK_APP_INFO { }

//  RESOURCE DEFINITIONS

#ifdef RD_JAVA_S60_RELEASE_9_2
RESOURCE CBA r_midp_softkeys_cancel
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyEmpty; txt=text_softkey_empty;},
        CBA_BUTTON {id=EAknSoftkeyCancel; txt=text_softkey_cancel;},
        CBA_BUTTON {id=EAknSoftkeyEmpty; txt=text_softkey_empty;}
        };
    }
#else
RESOURCE CBA r_midp_softkeys_ok_back
    {
    buttons =
        {
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;},
        CBA_BUTTON {id=EAknSoftkeyBack; txt=text_softkey_back;},
        CBA_BUTTON {id=EAknSoftkeyOk; txt=text_softkey_ok;}
        };
    }
#endif // RD_JAVA_S60_RELEASE_9_2
// -----------------------------------------------------------------------------
//
// r_midp_softkeys_options_empty
// Additional softkey configuration
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA_BUTTON r_midp_softkey_options
    {
    id=EAknSoftkeyOptions;
    txt=text_softkey_option;
    }

// -----------------------------------------------------------------------------
//
// r_midp_textbox_special_character_table_dialog
// Dialog for entering special characters in ANY/URL/EMAILADDR-mode TextBox/Field.
// Note: This is copied directly from Avkon, with additional characters
// required by the JTWI spec.
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_midp_textbox_special_character_table_dialog
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
    buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknSCTQueryHeadingId;
            control = AVKON_HEADING
                {
                label = qtn_pop_up_select_character;
                headinglayout = R_AVKON_SCT_LIST_HEADING_PANE;
                };
            },
        DLG_LINE
            {
            type = EAknCtSpecialCharacterMap;
            id = EAknSCTQueryContentId;
            control = SPECIAL_CHAR_TABLE
                {
                contents =
                    {
                    SCT_CHAR_SET
                        {
                        id = EAknSCTLowerCase;
                        chars = qtn_sct_special_characters_lower<0x0060>;
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTUpperCase;
                        chars = qtn_sct_special_characters_upper<0x0060>;
                        }
                    };
                };
            }
        };
    }


// -----------------------------------------------------------------------------
//
// r_midp_textbox_numeric_mode_dialog
// Dialog for entering a minus sign in NUMERIC-mode TextBox/Field
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_midp_textbox_numeric_mode_dialog
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder
            | EEikDialogFlagNoShadow;
    buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknSCTQueryHeadingId;
            control = AVKON_HEADING
                {
                label = qtn_pop_up_select_character;
                headinglayout = R_AVKON_SCT_LIST_HEADING_PANE;
                };
            },
        DLG_LINE
            {
            type = EAknCtSpecialCharacterMap;
            id = EAknSCTQueryContentId;
            control = SPECIAL_CHAR_TABLE
                {
                contents =
                    {
                    SCT_CHAR_SET
                        {
                        id = EAknSCTLowerCase;
                        chars = "-";
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTUpperCase;
                        chars = "-";
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTNumeric;
                        chars = "-";
                        }
                    };
                };
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_midp_textbox_decimal_mode_dialog
// Dialog for entering a minus sign or a decimal point in DECIMAL-mode TextBox/Field
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_midp_textbox_decimal_mode_dialog
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder
            | EEikDialogFlagNoShadow;
    buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknSCTQueryHeadingId;
            control = AVKON_HEADING
                {
                label = qtn_pop_up_select_character;
                headinglayout = R_AVKON_SCT_LIST_HEADING_PANE;
                };
            },
        DLG_LINE
            {
            type = EAknCtSpecialCharacterMap;
            id = EAknSCTQueryContentId;
            control = SPECIAL_CHAR_TABLE
                {
                contents =
                    {
                    SCT_CHAR_SET
                        {
                        id = EAknSCTLowerCase;
                        chars = "-.";
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTUpperCase;
                        chars = "-.";
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTNumeric;
                        chars = "-.";
                        }
                    };
                };
            }
        };
    }
// -----------------------------------------------------------------------------
//
// r_midp_textbox_decimal_mode_with_comma_dialog
// Same as above for locales where comma is used as a decimal separator
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_midp_textbox_decimal_mode_with_comma_dialog
    {
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder
            | EEikDialogFlagNoShadow;
    buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
    items=
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknSCTQueryHeadingId;
            control = AVKON_HEADING
                {
                label = qtn_pop_up_select_character;
                headinglayout = R_AVKON_SCT_LIST_HEADING_PANE;
                };
            },
        DLG_LINE
            {
            type = EAknCtSpecialCharacterMap;
            id = EAknSCTQueryContentId;
            control = SPECIAL_CHAR_TABLE
                {
                contents =
                    {
                    SCT_CHAR_SET
                        {
                        id = EAknSCTLowerCase;
                        chars = "-,";
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTUpperCase;
                        chars = "-,";
                        },
                    SCT_CHAR_SET
                        {
                        id = EAknSCTNumeric;
                        chars = "-,";
                        }
                    };
                };
            }
        };
    }


// -----------------------------------------------------------------------------
//
// r_midp_confirmation_dialog
// General confirmation query layout.
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_midp_confirmation_dialog
    {
    flags   = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items =
        {
        DLG_LINE
            {
            type    = EAknCtQuery;
            id      = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                };
            }
        };
     }


// -----------------------------------------------------------------------------
//
// r_midp_menubar_default
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_BAR r_midp_menubar_default
    {
    titles=
        {
        MENU_TITLE { menu_pane=r_midp_menupane_displayable; },
        MENU_TITLE { menu_pane=r_midp_menupane_default; }
        };
    }

// -----------------------------------------------------------------------------
//
// r_midp_menupane_displayable
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_midp_menupane_displayable
    {
    items =
        {
        };
    }

// -----------------------------------------------------------------------------
//
// r_midp_menupane_default
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_midp_menupane_default
    {
    items =
        {
        };
    }

// -----------------------------------------------------------------------------
//
// r_midp_slider_default
// used in constructing the interactive gauge in a form
//
// -----------------------------------------------------------------------------
//
RESOURCE SLIDER r_midp_slider_default
    {
    layout=EAknMIDPFormSliderLayout;
    minvalue=0;
    maxvalue=11;
    step=1;
    valuetype=EAknSliderValueBareFigure;
    minlabel="min";
    maxlabel="max";
    }

/////////////////////////////////////////////////////////////////////////////////

RESOURCE ARRAY r_qgn_midp_note_alarm_alert_frames_skinned
    {
    items=
        {
        BMPANIM_FRAME_SKINNED {time=3000;
                               bmpid=EMbmLcduiQgn_note_alarm_alert;
                               maskid=EMbmLcduiQgn_note_alarm_alert_mask;
                               majorskinid=EAknsMajorAvkon;
                               minorskinid=EAknsMinorGenericQgnNoteAlarmAlert;}
        };
    }

/////////////////////////////////////////////////////////////////////////////////
RESOURCE DIALOG r_midp_information_note_dialog
    {
    flags =  EEikDialogFlagNotifyEsc;
    buttons = R_AVKON_SOFTKEYS_EMPTY_WITH_IDS;
    items =
        {
        // Text (Rich text editor)
        DLG_LINE
            {
            type=EEikCtRichTextEditor;
            id = EAlertDialogInformationRichTextEditorCtrl;
            control = RTXTED
                {
                flags= EEikEdwinNoHorizScrolling | EEikEdwinDisplayOnly | EEikEdwinReadOnly | EEikEdwinNoAutoSelection | EEikEdwinAvkonDisableCursor;
                };
            }
        };
    }

RESOURCE DLG_LINE r_midp_information_note_animation
    {
    type=EAknCtBitmapAnimation;
    id = EAlertDialogInformationBitmapAnimationCtrl;
    control = BMPANIM_DATA_SKINNED
        {
        skinanimationid = EAknsMinorQgnNoteInfoAnim;
        frameinterval = 200;
        playmode = EAknBitmapAnimationPlayModePlay;
        bmpfile = AVKON_ICON_FILE;
        frames = R_QGN_NOTE_INFO_ANIM_FRAMES_SKINNED;
        };
    }

/////////////////////////////////////////////////////////////////////////////////
RESOURCE DIALOG r_midp_none_alerttype_dialog
    {
    flags =  EEikDialogFlagNotifyEsc;
    buttons = R_AVKON_SOFTKEYS_EMPTY_WITH_IDS;
    items =
        {
// Text (Rich text editor)
        DLG_LINE
            {
            type=EEikCtRichTextEditor;
            id = EAlertDialogNoneRichTextEditorCtrl;
            control = RTXTED
                {
                flags= EEikEdwinNoHorizScrolling | EEikEdwinDisplayOnly | EEikEdwinReadOnly | EEikEdwinNoAutoSelection | EEikEdwinAvkonDisableCursor;
                };
            }
        };
    }

/////////////////////////////////////////////////////////////////////////////////
RESOURCE DIALOG r_midp_confirmation_note_dialog
    {
    flags =  EEikDialogFlagNotifyEsc;
    buttons = R_AVKON_SOFTKEYS_EMPTY_WITH_IDS;
    items =
        {
        // Text (Rich text editor)
        DLG_LINE
            {
            type=EEikCtRichTextEditor;
            id = EAlertDialogConfirmationRichTextEditorCtrl;
            control = RTXTED
                {
                flags= EEikEdwinNoHorizScrolling | EEikEdwinDisplayOnly | EEikEdwinReadOnly | EEikEdwinNoAutoSelection | EEikEdwinAvkonDisableCursor;
                };
            }
        };
    }

RESOURCE DLG_LINE r_midp_confirmation_note_animation
    {
    type=EAknCtBitmapAnimation;
    id = EAlertDialogConfirmationBitmapAnimationCtrl;
    control = BMPANIM_DATA_SKINNED
        {
        skinanimationid = EAknsMinorQgnNoteOkAnim;
        frameinterval = 200;
        playmode = EAknBitmapAnimationPlayModePlay;
        bmpfile = AVKON_ICON_FILE;
        frames = R_QGN_NOTE_OK_ANIM_FRAMES_SKINNED;
        };
    }

/////////////////////////////////////////////////////////////////////////////////
RESOURCE DIALOG r_midp_error_note_dialog
    {
    flags =  EEikDialogFlagNotifyEsc;
    buttons = R_AVKON_SOFTKEYS_EMPTY_WITH_IDS;
    items =
        {
        // Text (Rich text editor)
        DLG_LINE
            {
            type=EEikCtRichTextEditor;
            id = EAlertDialogErrorRichTextEditorCtrl;
            control = RTXTED
                {
                flags= EEikEdwinNoHorizScrolling | EEikEdwinDisplayOnly | EEikEdwinReadOnly | EEikEdwinNoAutoSelection | EEikEdwinAvkonDisableCursor;
                };
            }
        };
    }

RESOURCE DLG_LINE r_midp_error_note_animation
    {
    type=EAknCtBitmapAnimation;
    id = EAlertDialogErrorBitmapAnimationCtrl;
    control = BMPANIM_DATA_SKINNED
        {
        skinanimationid = EAknsMinorQgnNoteErrorAnim;
        frameinterval = 200;
        playmode = EAknBitmapAnimationPlayModePlay;
        bmpfile = AVKON_ICON_FILE;
        frames = R_QGN_NOTE_ERROR_ANIM_FRAMES_SKINNED;
        };
    }

/////////////////////////////////////////////////////////////////////////////////
RESOURCE DIALOG r_midp_warning_note_dialog
    {
    flags = EEikDialogFlagNotifyEsc;
    buttons = R_AVKON_SOFTKEYS_EMPTY_WITH_IDS;
    items =
        {
        // Text (Rich text editor)
        DLG_LINE
            {
            type=EEikCtRichTextEditor;
            id = EAlertDialogWarningRichTextEditorCtrl;
            control = RTXTED
                {
                flags= EEikEdwinNoHorizScrolling | EEikEdwinDisplayOnly | EEikEdwinReadOnly | EEikEdwinNoAutoSelection | EEikEdwinAvkonDisableCursor;
                };
            }
        };
    }

RESOURCE DLG_LINE r_midp_warning_note_animation
    {
    type=EAknCtBitmapAnimation;
    id = EAlertDialogWarningBitmapAnimationCtrl;
    control = BMPANIM_DATA_SKINNED
        {
        skinanimationid = EAknsMinorQgnNoteWarningAnim;
        frameinterval = 200;
        playmode = EAknBitmapAnimationPlayModePlay;
        bmpfile = AVKON_ICON_FILE;
        frames = R_QGN_NOTE_WARNING_ANIM_FRAMES_SKINNED;
        };
    }

RESOURCE DIALOG r_midp_alarm_note_dialog
    {
    flags = EEikDialogFlagNotifyEsc;
    buttons = R_AVKON_SOFTKEYS_EMPTY_WITH_IDS;
    items =
        {
        // Text (Rich text editor)
        DLG_LINE
            {
            type=EEikCtRichTextEditor;
            id = EAlertDialogAlarmRichTextEditorCtrl;
            control = RTXTED
                {
                flags= EEikEdwinNoHorizScrolling | EEikEdwinDisplayOnly | EEikEdwinReadOnly | EEikEdwinNoAutoSelection | EEikEdwinAvkonDisableCursor;
                };
            }
        };
    }

RESOURCE DLG_LINE r_midp_alarm_note_animation
    {
    type=EAknCtBitmapAnimation;
    id=EAlertDialogAlarmBitmapAnimationCtrl;
    control = BMPANIM_DATA_SKINNED
        {
        skinanimationid = EAknsMinorQgnNoteAlarmAlertAnim;
        frameinterval = 200;
        playmode = EAknBitmapAnimationPlayModePlay;

#ifdef __SCALABLE_ICONS
        bmpfile = BITMAP_DIR"\\lcdui.mif";
#else
        bmpfile = BITMAP_DIR"\\lcdui.mbm";
#endif

        frames = r_qgn_midp_note_alarm_alert_frames_skinned;
        };
    }


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
RESOURCE DLG_LINE r_midp_alert_spacer_line
    {
    type = EEikCtSpacer;
    id = EAlertDialogSpacerLineCtrl;
    control = SPACER
        {
        color=EEikSpacerBlack;
        };
    }
RESOURCE DLG_LINE r_midp_alert_heading_line
    {
    type = EEikCtLabel;
    id = EAlertDialogHeadingLineCtrl;
    control = LABEL
        {
        txt="";
        };
    }

RESOURCE DLG_LINE r_midp_alert_image_line
    {
    type=EEikCtImage;
    id = EAlertDialogImageLineCtrl;
    control = IMAGE
        {
        bmpfile= BITMAP_DIR"\\callstatus.mbm";
        //bmpfile=AVKON_ICON_FILE;
        //bmpid = EMbmAvkonQgn_prop_group_small;
        //bmpmask = EMbmAvkonQgn_prop_group_small_mask;
        };
    }

RESOURCE DLG_LINE r_midp_alert_progi_line
    {
    type = EEikCtProgInfo;
    id = EAlertDialogProgiLineCtrl;
    control = PROGRESSINFO
        {
        finalval=10;
        };
    }

RESOURCE DLG_LINE r_midp_alert_editor_line
    {
    type=EEikCtRichTextEditor;
    id = EAlertDialogEditorLineCtrl;
    control = RTXTED
        {
        flags= EEikEdwinNoHorizScrolling | EEikEdwinDisplayOnly | EEikEdwinReadOnly | EEikEdwinNoAutoSelection | EEikEdwinAvkonDisableCursor;
        };
    }

RESOURCE DLG_LINE r_midp_alert_wait_animation_continuous_running_line
    {
    type = EAknCtBitmapAnimation;
    id = EAlertDialogWaitAnimationLineCtrl;
    control = BMPANIM_DATA_SKINNED
        {
        skinanimationid = EAknsMinorQgnGrafBarWaitAnim;
        frameinterval = 100;
        playmode = EAknBitmapAnimationPlayModeCycle;
        bmpfile = AVKON_ICON_FILE;
        frames = R_QGN_GRAF_WAIT_BAR_ANIM_FRAMES_SKINNED;
        };
    }

RESOURCE DLG_LINE r_midp_alert_wait_animation_continuous_idle_line
    {
    type=EAknCtBitmapAnimation;
    id = EAlertDialogErrorAnimationLineCtrl;
    control = BMPANIM_DATA_SKINNED
        {
        frameinterval = 10000; //There is only one frame, so updating isn't needed often
        playmode = EAknBitmapAnimationPlayModeCycle;
        bmpfile = AVKON_ICON_FILE;
        frames = R_QGN_GRAF_WAIT_BAR_IDLE_ANIM_FRAMES_SKINNED;
        };
    }

RESOURCE DLG_LINE r_midp_alert_wait_bar_increm_idle_line
    {
    type=EAknCtBitmapAnimation;
    id = EAlertDialogErrorAnimationLineCtrl;
    control = BMPANIM_DATA_SKINNED
        {
        frameinterval = 10000; //There is only one frame, so updating isn't needed often
        playmode = EAknBitmapAnimationPlayModeCycle;
        bmpfile = AVKON_ICON_FILE;
        frames = R_QGN_GRAF_WAIT_BAR_INCREM_IDLE_ANIM_FRAMES_SKINNED;
    //  frames = R_QGN_GRAF_WAIT_BAR_IDLE_ANIM_FRAMES;
        };
    }

RESOURCE DLG_LINE r_midp_alert_wait_bar_increm_line
    {
    type=EAknCtBitmapAnimation;
    id = EAlertDialogErrorAnimationLineCtrl;
    control = BMPANIM_DATA_SKINNED
        {
        frameinterval = 100;
        playmode = EAknBitmapAnimationPlayModePlay;
        bmpfile = AVKON_ICON_FILE;
        frames = R_QGN_GRAF_WAIT_BAR_INCREM_ANIM_FRAMES_SKINNED;
        };
    }

RESOURCE AIW_INTEREST r_pbk2_contact_selection_interest
    {
    items=
        {
        AIW_CRITERIA_ITEM
            {
            id = KAiwCmdSelect;  // serviceCmd used here also as ID
            serviceCmd   = KAiwCmdSelect;
            contentType  = EGenericParamContactLinkArrayStr;
            serviceClass = KAiwClassBase;
            maxProviders = 1;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// On-Screen keypad - Rocker button resources and extensions for skinning purposes
//
// -----------------------------------------------------------------------------

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_rocker_qgn_indi_button_j_rocker_fire
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiButtonJRockerFire;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_rocker_qgn_indi_button_j_rocker_fire_pressed
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiButtonJRockerFirePressed;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_rocker_qgn_indi_button_j_rocker_left
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiButtonJRockerLeft;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_rocker_qgn_indi_button_j_rocker_left_pressed
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiButtonJRockerLeftPressed;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_rocker_qgn_indi_button_j_rocker_right
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiButtonJRockerRight;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_rocker_qgn_indi_button_j_rocker_right_pressed
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiButtonJRockerRightPressed;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_rocker_qgn_indi_button_j_rocker_up
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiButtonJRockerUp;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_rocker_qgn_indi_button_j_rocker_up_pressed
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiButtonJRockerUpPressed;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_rocker_qgn_indi_button_j_rocker_down
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiButtonJRockerDown;
    }

RESOURCE AVKON_BUTTON_STATE_EXTENSION r_rocker_qgn_indi_button_j_rocker_down_pressed
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiButtonJRockerDownPressed;
    }

RESOURCE AVKON_BUTTONS r_onscreen_keyboard_rocker_buttons
    {
    buttons =
        {
        //Fire
        AVKON_BUTTON
            {
            flags=KAknButtonNoFrame|KAknButtonHitTest;
            states =
                {
                AVKON_BUTTON_STATE
                    {
                    bmpfile=BITMAP_DIR"\\lcdui.mif";
                    bmpid=EMbmLcduiQgn_indi_button_j_rocker_fire;
                    bmpmask=EMbmLcduiQgn_indi_button_j_rocker_fire_mask;
                    dim_bmpid=EMbmLcduiQgn_indi_button_j_rocker_fire_dimmed;
                    dim_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_fire_dimmed_mask;
                    press_bmpid=EMbmLcduiQgn_indi_button_j_rocker_fire_pressed;
                    press_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_fire_pressed_mask;
                    extension = r_rocker_qgn_indi_button_j_rocker_fire;
                    },
                AVKON_BUTTON_STATE
                    {
                    bmpfile=BITMAP_DIR"\\lcdui.mif";
                    press_bmpid=EMbmLcduiQgn_indi_button_j_rocker_fire;
                    press_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_fire_mask;
                    dim_bmpid=EMbmLcduiQgn_indi_button_j_rocker_fire_dimmed;
                    dim_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_fire_dimmed_mask;
                    bmpid=EMbmLcduiQgn_indi_button_j_rocker_fire_pressed;
                    bmpmask=EMbmLcduiQgn_indi_button_j_rocker_fire_pressed_mask;
                    extension = r_rocker_qgn_indi_button_j_rocker_fire_pressed;
                    }
                };
            },
                //RIGHT
        AVKON_BUTTON
            {
            flags=KAknButtonNoFrame|KAknButtonHitTest;
            states =
                {
                AVKON_BUTTON_STATE
                    {
                    bmpfile=BITMAP_DIR"\\lcdui.mif";
                    bmpid=EMbmLcduiQgn_indi_button_j_rocker_right;
                    bmpmask=EMbmLcduiQgn_indi_button_j_rocker_right_mask;
                    dim_bmpid=EMbmLcduiQgn_indi_button_j_rocker_right_dimmed;
                    dim_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_right_dimmed_mask;
                    press_bmpid=EMbmLcduiQgn_indi_button_j_rocker_right_pressed;
                    press_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_right_pressed_mask;
                    extension=r_rocker_qgn_indi_button_j_rocker_right;
                    },
                AVKON_BUTTON_STATE
                    {
                    bmpfile=BITMAP_DIR"\\lcdui.mif";
                    press_bmpid=EMbmLcduiQgn_indi_button_j_rocker_right;
                    press_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_right_mask;
                    dim_bmpid=EMbmLcduiQgn_indi_button_j_rocker_right_dimmed;
                    dim_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_right_dimmed_mask;
                    bmpid=EMbmLcduiQgn_indi_button_j_rocker_right_pressed;
                    bmpmask=EMbmLcduiQgn_indi_button_j_rocker_right_pressed_mask;
                    extension=r_rocker_qgn_indi_button_j_rocker_right_pressed;
                    }
                };
            },
                //LEFT
        AVKON_BUTTON
            {
            flags=KAknButtonNoFrame|KAknButtonHitTest;
            states =
                {
                AVKON_BUTTON_STATE
                    {
                    bmpfile=BITMAP_DIR"\\lcdui.mif";
                    bmpid=EMbmLcduiQgn_indi_button_j_rocker_left;
                    bmpmask=EMbmLcduiQgn_indi_button_j_rocker_left_mask;
                    dim_bmpid=EMbmLcduiQgn_indi_button_j_rocker_left_dimmed;
                    dim_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_left_dimmed_mask;
                    press_bmpid=EMbmLcduiQgn_indi_button_j_rocker_left_pressed;
                    press_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_left_pressed_mask;
                    extension=r_rocker_qgn_indi_button_j_rocker_left;
                    },
                AVKON_BUTTON_STATE
                    {
                    bmpfile=BITMAP_DIR"\\lcdui.mif";
                    press_bmpid=EMbmLcduiQgn_indi_button_j_rocker_left;
                    press_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_left_mask;
                    dim_bmpid=EMbmLcduiQgn_indi_button_j_rocker_left_dimmed;
                    dim_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_left_dimmed_mask;
                    bmpid=EMbmLcduiQgn_indi_button_j_rocker_left_pressed;
                    bmpmask=EMbmLcduiQgn_indi_button_j_rocker_left_pressed_mask;
                    extension=r_rocker_qgn_indi_button_j_rocker_left_pressed;
                    }
                };
            },
                //UP
        AVKON_BUTTON
            {
            flags=KAknButtonNoFrame|KAknButtonHitTest;
            states =
                {
                AVKON_BUTTON_STATE
                    {
                    bmpfile=BITMAP_DIR"\\lcdui.mif";
                    bmpid=EMbmLcduiQgn_indi_button_j_rocker_up;
                    bmpmask=EMbmLcduiQgn_indi_button_j_rocker_up_mask;
                    dim_bmpid=EMbmLcduiQgn_indi_button_j_rocker_up_dimmed;
                    dim_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_up_dimmed_mask;
                    press_bmpid=EMbmLcduiQgn_indi_button_j_rocker_up_pressed;
                    press_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_up_pressed_mask;
                    extension=r_rocker_qgn_indi_button_j_rocker_up;
                    },
                AVKON_BUTTON_STATE
                    {
                    bmpfile=BITMAP_DIR"\\lcdui.mif";
                    press_bmpid=EMbmLcduiQgn_indi_button_j_rocker_up;
                    press_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_up_mask;
                    dim_bmpid=EMbmLcduiQgn_indi_button_j_rocker_up_dimmed;
                    dim_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_up_dimmed_mask;
                    bmpid=EMbmLcduiQgn_indi_button_j_rocker_up_pressed;
                    bmpmask=EMbmLcduiQgn_indi_button_j_rocker_up_pressed_mask;
                    extension=r_rocker_qgn_indi_button_j_rocker_up_pressed;
                    }
                };
            },
                //Down
        AVKON_BUTTON
            {
            flags=KAknButtonNoFrame|KAknButtonHitTest;
            states =
                {
                AVKON_BUTTON_STATE
                    {
                    bmpfile=BITMAP_DIR"\\lcdui.mif";
                    bmpid=EMbmLcduiQgn_indi_button_j_rocker_down;
                    bmpmask=EMbmLcduiQgn_indi_button_j_rocker_down_mask;
                    dim_bmpid=EMbmLcduiQgn_indi_button_j_rocker_down_dimmed;
                    dim_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_down_dimmed_mask;
                    press_bmpid=EMbmLcduiQgn_indi_button_j_rocker_down_pressed;
                    press_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_down_pressed_mask;
                    extension=r_rocker_qgn_indi_button_j_rocker_down;
                    },
                AVKON_BUTTON_STATE
                    {
                    bmpfile=BITMAP_DIR"\\lcdui.mif";
                    press_bmpid=EMbmLcduiQgn_indi_button_j_rocker_down;
                    press_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_down_mask;
                    dim_bmpid=EMbmLcduiQgn_indi_button_j_rocker_down_dimmed;
                    dim_bmpmask=EMbmLcduiQgn_indi_button_j_rocker_down_dimmed_mask;
                    bmpid=EMbmLcduiQgn_indi_button_j_rocker_down_pressed;
                    bmpmask=EMbmLcduiQgn_indi_button_j_rocker_down_pressed_mask;
                    extension=r_rocker_qgn_indi_button_j_rocker_down_pressed;
                    }
                };
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_midp_popup_textbox
// Popup TextBox is used instead of normal (full screen) TextBox when
// application attribute Nokia-MIDlet-Pop-Up-TextBox is set true.
// Implemenation is based on Avkon text query dialog.
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_midp_popup_textbox
     {
    flags = EEikDialogFlagNotifyEsc;
    buttons = R_AVKON_SOFTKEYS_EMPTY_WITH_IDS;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_DATA_QUERY
                {
                layout = EDataLayout;
                label = "";
                control = EDWIN
                    {
                    flags = EEikEdwinNoAutoSelection | EEikEdwinResizable;
                    };
                };
            }
        };
     }
// -----------------------------------------------------------------------------
//
// String resources
//
// -----------------------------------------------------------------------------

//
// ===================== Key names =============================================
//
RESOURCE TBUF r_midp_key_up                             { buf=qtn_midp_key_up; }
RESOURCE TBUF r_midp_key_down                           { buf=qtn_midp_key_down; }
RESOURCE TBUF r_midp_key_left                           { buf=qtn_midp_key_left; }
RESOURCE TBUF r_midp_key_right                          { buf=qtn_midp_key_right; }
RESOURCE TBUF r_midp_key_select                         { buf=qtn_midp_key_select; }
RESOURCE TBUF r_midp_key_clear                          { buf=qtn_midp_key_clear; }
RESOURCE TBUF r_midp_key_edit                           { buf=qtn_midp_key_edit; }
RESOURCE TBUF r_midp_key_send                           { buf=qtn_midp_key_send; }
RESOURCE TBUF r_midp_key_lsk                            { buf=qtn_midp_key_lsk; }
RESOURCE TBUF r_midp_key_rsk                            { buf=qtn_midp_key_rsk; }
RESOURCE TBUF r_midp_key_end                            { buf=qtn_midp_key_end; }
RESOURCE TBUF r_midp_key_apps                           { buf=qtn_midp_key_apps; }
RESOURCE TBUF r_midp_key_voice                          { buf=qtn_midp_key_voice; }

RESOURCE TBUF r_midp_key_play                           { buf=qtn_midp_key_play; }
RESOURCE TBUF r_midp_key_previous                       { buf=qtn_midp_key_previous; }
RESOURCE TBUF r_midp_key_next                           { buf=qtn_midp_key_next; }
RESOURCE TBUF r_midp_key_stop                           { buf=qtn_midp_key_stop; }

RESOURCE TBUF r_midp_key_clockwise_rotate               { buf=qtn_midp_key_clockwise_rotate; }
RESOURCE TBUF r_midp_key_counter_clockwise_rotate       { buf=qtn_midp_key_counter_clockwise_rotate; }
RESOURCE TBUF r_midp_key_clockwise_fast_rotate          { buf=qtn_midp_key_clockwise_fast_rotate; }
RESOURCE TBUF r_midp_key_counter_clockwise_fast_rotate  { buf=qtn_midp_key_counter_clockwise_fast_rotate; }

RESOURCE TBUF r_midp_key_space                          { buf=qtn_midp_key_space; }
RESOURCE TBUF r_midp_key_backspace                      { buf=qtn_midp_key_backspace; }

RESOURCE TBUF r_midp_key_esc                            { buf=qtn_midp_key_esc; }
RESOURCE TBUF r_midp_key_tab                            { buf=qtn_midp_key_tab; }
RESOURCE TBUF r_midp_key_enter                          { buf=qtn_midp_key_enter; }
RESOURCE TBUF r_midp_key_delete                         { buf=qtn_midp_key_delete; }
RESOURCE TBUF r_midp_key_form_feed                      { buf=qtn_midp_key_form_feed; }
RESOURCE TBUF r_midp_key_vertical_tab                   { buf=qtn_midp_key_vertical_tab; }
RESOURCE TBUF r_midp_key_line_feed                      { buf=qtn_midp_key_line_feed; }
RESOURCE TBUF r_midp_key_bell                           { buf=qtn_midp_key_bell; }
RESOURCE TBUF r_midp_key_non_character                  { buf=qtn_midp_key_non_character; }

RESOURCE TBUF r_midp_key_zoom_in                        { buf=qtn_midp_key_zoom_in; }
RESOURCE TBUF r_midp_key_zoom_out                       { buf=qtn_midp_key_zoom_out; }

// ===================== Command labels for MIDlet Menu ========================
//
// The default short labels for Commands. Most of the texts are for softkey layout,
// but they are also used in Options menu, i.e. we make the assumption that if text fits
// into softkey, it also fits into options menu.
// This must be verified when new screen sizes emerge.
//
// Note the difference between _default_ label for command type EXIT, which is 'Close', and
// the label of the default exit command always present in the option menu, which is 'Exit'.
RESOURCE TBUF r_midp_exit_command_text            { buf=text_softkey_close; }
RESOURCE TBUF r_midp_default_exit_command_text    { buf=qtn_options_exit; }
RESOURCE TBUF r_midp_screen_command_text          { buf=text_softkey_select; }
RESOURCE TBUF r_midp_back_command_text            { buf=text_softkey_back; }
RESOURCE TBUF r_midp_cancel_command_text          { buf=text_softkey_cancel; }
RESOURCE TBUF r_midp_ok_command_text              { buf=text_softkey_ok; }
RESOURCE TBUF r_midp_stop_command_text            { buf=text_softkey_stop; }
RESOURCE TBUF r_midp_item_command_text            { buf=text_softkey_select; }
RESOURCE TBUF r_midp_help_command_text            { buf=qtn_options_help; }
RESOURCE TBUF r_midp_pb_fetch_number_command_text { buf=qtn_midp_option_pb_fetch_number; }
RESOURCE TBUF r_midp_pb_fetch_number_short_command_text { buf=qtn_midp_option_pb_fetch_number_short; }
RESOURCE TBUF r_midp_pb_fetch_email_command_text  { buf=qtn_midp_option_pb_fetch_email; }
RESOURCE TBUF r_midp_pb_fetch_email_short_command_text  { buf=qtn_midp_option_pb_fetch_email_short; }
RESOURCE TBUF r_midp_create_call_command_text     { buf=qtn_midp_option_create_call; }
RESOURCE TBUF r_midp_create_call_short_command_text     { buf=qtn_midp_option_create_call_short; }
//
// Labels for the implicit Alert DISMISS_COMMAND and List SELECT_COMMAND
RESOURCE TBUF r_dismiss_command_name { buf=text_softkey_ok; }
RESOURCE TBUF r_select_command_name  { buf=text_softkey_select; }

// ===================== Alert default texts ===================================
//
RESOURCE TBUF r_midp_alert_error_default_text   { buf=qtn_midp_alert_error; }
RESOURCE TBUF r_midp_alert_warning_default_text { buf=qtn_midp_alert_warning; }
RESOURCE TBUF r_midp_alert_info_default_text    { buf=qtn_midp_alert_info; }
RESOURCE TBUF r_midp_alert_conf_default_text    { buf=qtn_midp_alert_conf; }
RESOURCE TBUF r_midp_alert_alarm_default_text   { buf=qtn_midp_alert_alarm; }
RESOURCE TBUF r_midp_alert_null_default_text    { buf=qtn_midp_alert_null; }

// ===================== TextBox/TextField text resources ======================
//
RESOURCE TBUF r_midp_quest_call_number            { buf=qtn_midp_quest_call_number; }
// currently not used:
//RESOURCE TBUF r_midp_textbox_dialog_default_title { buf=text_popupfield_prompt_for_text; }
//RESOURCE TBUF r_midp_text_uneditable              { buf=qtn_midp_text_uneditable; }
//RESOURCE TBUF r_midp_text_maximum_reached         { buf=qtn_midp_text_maximum_reached; }

// End of File
