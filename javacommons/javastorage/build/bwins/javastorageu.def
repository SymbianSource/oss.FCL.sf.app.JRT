EXPORTS
	?jni_lookup@@YAP6AXXZPBD@Z @ 1 NONAME ; void (*)(void) jni_lookup(char const *)
	??1JavaDataAccessImpl@storage@java@@UAE@XZ @ 2 NONAME ; java::storage::JavaDataAccessImpl::~JavaDataAccessImpl(void)
	??1JavaStorageImpl@storage@java@@UAE@XZ @ 3 NONAME ; java::storage::JavaStorageImpl::~JavaStorageImpl(void)
	??MJavaStorageEntry@storage@java@@QBE_NABV012@@Z @ 4 NONAME ; bool java::storage::JavaStorageEntry::operator<(class java::storage::JavaStorageEntry const &) const
	?appendTable@JavaStorageImpl@storage@java@@UAEXABV?$basic_string@DV?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$multiset@VJavaStorageEntry@storage@java@@U?$less@VJavaStorageEntry@storage@java@@@std@@V?$allocator@VJavaStorageEntry@storage@java@@@5@@5@@Z @ 5 NONAME ; void java::storage::JavaStorageImpl::appendTable(class std::basic_string<char, class std::char_traits<char>, class std::allocator<char> > const &, class std::multiset<class java::storage::JavaStorageEntry, struct std::less<class java::storage::JavaStorageEntry>, class std::allocator<class java::storage::JavaStorageEntry> > const &)
	?close@JavaDataAccessImpl@storage@java@@UAEXABV?$basic_string@DV?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVCommsMessage@comms@3@@Z @ 6 NONAME ; void java::storage::JavaDataAccessImpl::close(class std::basic_string<char, class std::char_traits<char>, class std::allocator<char> > const &, class java::comms::CommsMessage &)
	?close@JavaStorageImpl@storage@java@@UAEXXZ @ 7 NONAME ; void java::storage::JavaStorageImpl::close(void)
	?commitTransaction@JavaStorageImpl@storage@java@@UAEXXZ @ 8 NONAME ; void java::storage::JavaStorageImpl::commitTransaction(void)
	?createInstance@JavaDataAccess@storage@java@@SAPAV123@XZ @ 9 NONAME ; class java::storage::JavaDataAccess * java::storage::JavaDataAccess::createInstance(void)
	?createInstance@JavaStorage@storage@java@@SAPAV123@XZ @ 10 NONAME ; class java::storage::JavaStorage * java::storage::JavaStorage::createInstance(void)
	?createTable@JavaStorageImpl@storage@java@@UAEXABV?$basic_string@DV?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$multiset@VJavaStorageEntry@storage@java@@U?$less@VJavaStorageEntry@storage@java@@@std@@V?$allocator@VJavaStorageEntry@storage@java@@@5@@5@@Z @ 11 NONAME ; void java::storage::JavaStorageImpl::createTable(class std::basic_string<char, class std::char_traits<char>, class std::allocator<char> > const &, class std::multiset<class java::storage::JavaStorageEntry, struct std::less<class java::storage::JavaStorageEntry>, class std::allocator<class java::storage::JavaStorageEntry> > const &)
	?entryName@JavaStorageEntry@storage@java@@QBE?AV?$basic_string@_WV?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ @ 12 NONAME ; class std::basic_string<wchar_t, class std::char_traits<wchar_t>, class std::allocator<wchar_t> > java::storage::JavaStorageEntry::entryName(void) const
	?entryType@JavaStorageEntry@storage@java@@QBE?AW4JavaEntryColumnType@123@XZ @ 13 NONAME ; enum java::storage::JavaStorageEntry::JavaEntryColumnType java::storage::JavaStorageEntry::entryType(void) const
	?entryValue@JavaStorageEntry@storage@java@@QBE?AV?$basic_string@_WV?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ @ 14 NONAME ; class std::basic_string<wchar_t, class std::char_traits<wchar_t>, class std::allocator<wchar_t> > java::storage::JavaStorageEntry::entryValue(void) const
	?execute@JavaDataAccessImpl@storage@java@@UAEXABV?$basic_string@DV?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@_WV?$char_traits@_W@std@@V?$allocator@_W@2@@5@AAVCommsMessage@comms@3@@Z @ 15 NONAME ; void java::storage::JavaDataAccessImpl::execute(class std::basic_string<char, class std::char_traits<char>, class std::allocator<char> > const &, class std::basic_string<wchar_t, class std::char_traits<wchar_t>, class std::allocator<wchar_t> > const &, class java::comms::CommsMessage &)
	?open@JavaDataAccessImpl@storage@java@@UAEXABV?$basic_string@DV?$char_traits@D@std@@V?$allocator@D@2@@std@@0AAVCommsMessage@comms@3@@Z @ 16 NONAME ; void java::storage::JavaDataAccessImpl::open(class std::basic_string<char, class std::char_traits<char>, class std::allocator<char> > const &, class std::basic_string<char, class std::char_traits<char>, class std::allocator<char> > const &, class java::comms::CommsMessage &)
	?open@JavaStorageImpl@storage@java@@UAEXABV?$basic_string@DV?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 17 NONAME ; void java::storage::JavaStorageImpl::open(class std::basic_string<char, class std::char_traits<char>, class std::allocator<char> > const &)
	?open@JavaStorageImpl@storage@java@@UAEXXZ @ 18 NONAME ; void java::storage::JavaStorageImpl::open(void)
	?read@JavaStorageImpl@storage@java@@UAEXABV?$basic_string@DV?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVUid@util@3@AAV?$multiset@VJavaStorageEntry@storage@java@@U?$less@VJavaStorageEntry@storage@java@@@std@@V?$allocator@VJavaStorageEntry@storage@java@@@5@@5@@Z @ 19 NONAME ; void java::storage::JavaStorageImpl::read(class std::basic_string<char, class std::char_traits<char>, class std::allocator<char> > const &, class java::util::Uid const &, class std::multiset<class java::storage::JavaStorageEntry, struct std::less<class java::storage::JavaStorageEntry>, class std::allocator<class java::storage::JavaStorageEntry> > &)
	?remove@JavaStorageImpl@storage@java@@UAEHABV?$basic_string@DV?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$multiset@VJavaStorageEntry@storage@java@@U?$less@VJavaStorageEntry@storage@java@@@std@@V?$allocator@VJavaStorageEntry@storage@java@@@5@@5@@Z @ 20 NONAME ; int java::storage::JavaStorageImpl::remove(class std::basic_string<char, class std::char_traits<char>, class std::allocator<char> > const &, class std::multiset<class java::storage::JavaStorageEntry, struct std::less<class java::storage::JavaStorageEntry>, class std::allocator<class java::storage::JavaStorageEntry> > const &)
	?rollbackTransaction@JavaStorageImpl@storage@java@@UAEXXZ @ 21 NONAME ; void java::storage::JavaStorageImpl::rollbackTransaction(void)
	?search@JavaStorageImpl@storage@java@@UAEXABV?$basic_string@DV?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$multiset@VJavaStorageEntry@storage@java@@U?$less@VJavaStorageEntry@storage@java@@@std@@V?$allocator@VJavaStorageEntry@storage@java@@@5@@5@AAV?$list@V?$multiset@VJavaStorageEntry@storage@java@@U?$less@VJavaStorageEntry@storage@java@@@std@@V?$allocator@VJavaStorageEntry@storage@java@@@5@@std@@V?$allocator@V?$multiset@VJavaStorageEntry@storage@java@@U?$less@VJavaStorageEntry@storage@java@@@std@@V?$allocator@VJavaStorageEntry@storage@java@@@5@@std@@@2@@5@@Z @ 22 NONAME ; void java::storage::JavaStorageImpl::search(class std::basic_string<char, class std::char_traits<char>, class std::allocator<char> > const &, class std::multiset<class java::storage::JavaStorageEntry, struct std::less<class java::storage::JavaStorageEntry>, class std::allocator<class java::storage::JavaStorageEntry> > const &, class std::list<class std::multiset<class java::storage::JavaStorageEntry, struct std::less<class java::storage::JavaStorageEntry>, class std::allocator<class java::storage::JavaStorageEntry> >, class std::allocator<class std::multiset<class java::storage::JavaStorageEntry, struct std::less<class java::storage::JavaStorageEntry>, class std::allocator<class java::storage::JavaStorageEntry> > > > &)
	?setEntry@JavaStorageEntry@storage@java@@QAEXABV?$basic_string@_WV?$char_traits@_W@std@@V?$allocator@_W@2@@std@@0W4JavaEntryColumnType@123@@Z @ 23 NONAME ; void java::storage::JavaStorageEntry::setEntry(class std::basic_string<wchar_t, class std::char_traits<wchar_t>, class std::allocator<wchar_t> > const &, class std::basic_string<wchar_t, class std::char_traits<wchar_t>, class std::allocator<wchar_t> > const &, enum java::storage::JavaStorageEntry::JavaEntryColumnType)
	?startTransaction@JavaStorageImpl@storage@java@@UAEXXZ @ 24 NONAME ; void java::storage::JavaStorageImpl::startTransaction(void)
	?update@JavaStorageImpl@storage@java@@UAEXABV?$basic_string@DV?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$multiset@VJavaStorageEntry@storage@java@@U?$less@VJavaStorageEntry@storage@java@@@std@@V?$allocator@VJavaStorageEntry@storage@java@@@5@@5@1@Z @ 25 NONAME ; void java::storage::JavaStorageImpl::update(class std::basic_string<char, class std::char_traits<char>, class std::allocator<char> > const &, class std::multiset<class java::storage::JavaStorageEntry, struct std::less<class java::storage::JavaStorageEntry>, class std::allocator<class java::storage::JavaStorageEntry> > const &, class std::multiset<class java::storage::JavaStorageEntry, struct std::less<class java::storage::JavaStorageEntry>, class std::allocator<class java::storage::JavaStorageEntry> > const &)
	?write@JavaStorageImpl@storage@java@@UAEXABV?$basic_string@DV?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$multiset@VJavaStorageEntry@storage@java@@U?$less@VJavaStorageEntry@storage@java@@@std@@V?$allocator@VJavaStorageEntry@storage@java@@@5@@5@@Z @ 26 NONAME ; void java::storage::JavaStorageImpl::write(class std::basic_string<char, class std::char_traits<char>, class std::allocator<char> > const &, class std::multiset<class java::storage::JavaStorageEntry, struct std::less<class java::storage::JavaStorageEntry>, class std::allocator<class java::storage::JavaStorageEntry> > const &)
	?toString@JavaStorageException@storage@java@@UBE?AV?$basic_string@DV?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ @ 27 NONAME ; class std::basic_string<char, class std::char_traits<char>, class std::allocator<char> > java::storage::JavaStorageException::toString(void) const

